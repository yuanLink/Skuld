
if (NOT SKULD_WIN32ARM)
    set(MONO_EMBED on)
    set(MONO_BUILD_DIRVER off)

    set(MONO_ARM64 ${RTC_ARCH_ARM64})
    set(MONO_ARM ${RTC_ARCH_ARM})
    set(MONO_AMD64 ${RTC_ARCH_X64})
    set(MONO_X86 ${RTC_ARCH_X86})
    set(MONO_POWERPC off)
    set(MONO_POWERPC64 off)

    set(MONO_WIN32 ${SKULD_WIN32})
    set(MONO_UNIX ${SKULD_UNIX})
    set(MONO_OSX ${SKULD_MAC})
    set(MONO_ANDROID ${SKULD_ANDROID})

    if (MONO_AMD64)
        set(MONO_TARGET_ARCH AMD64)
    elseif (MONO_X86)
        set(MONO_TARGET_ARCH X86)
    elseif (MONO_ARM)
        set(MONO_TARGET_ARCH ARM)
    elseif (MONO_ARM64)
        set(MONO_TARGET_ARCH ARM64)
    elseif (MONO_POWERPC)
        set(MONO_TARGET_ARCH POWERPC)
    elseif (MONO_POWERPC64)
        set(MONO_TARGET_ARCH POWERPC64)
    endif()

    if (MONO_WIN32)
        set(MONO_TARGET_PLATFORM WIN32)
    elseif (MONO_UNIX)
        set(MONO_TARGET_PLATFORM UNIX)
    elseif (MONO_OSX)
        set(MONO_TARGET_PLATFORM OSX)
    elseif (MONO_ANDROID)
        set(MONO_TARGET_PLATFORM ANDROID)
    endif()

    add_subdirectory(mono5)

    mark_as_third_party(libmono ${CMAKE_CURRENT_SOURCE_DIR}/include)
    mark_as_third_party(eglib-mono)
    add_target_dependencies(libmono eglib-mono)
endif()